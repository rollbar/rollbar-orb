version: 2.1

description: |
  Commands for calling the Rollbar deploy API.
  Requires `curl` and `jq` commands to be available.
  The source for the Orb can be found here:
  https://github.com/rollbar/rollbar-orb/tree/master/src/rollbar

commands:
  notify_deploy_started:
    description: |
      A step to notify Rollbar that the deploy of a project has started.
      Should be used in conjunction with notify_deploy_finished.
      Command will set a BASH ENV variable ROLLBAR_DEPLOY_ID with the ID of the deploy.
    parameters:
      environment:
        type: string
        default: production
        description: The Rollbar environment. Defaults to production.
    steps:
        - run:
            name: Rollbar - Notify Deploy Started
            command: |
              ROLLBAR_DEPLOY_ID=`curl https://api.rollbar.com/api/1/deploy/ \
                --form access_token=$ROLLBAR_ACCESS_TOKEN \
                --form environment=<< parameters.environment >> \
                --form revision=$CIRCLE_SHA1 \
                --form local_username=$CIRCLE_USERNAME \
                --form status=started | jq -r '.data.deploy_id'`
                echo "Created deploy $ROLLBAR_DEPLOY_ID"
                echo "export ROLLBAR_DEPLOY_ID=$ROLLBAR_DEPLOY_ID" >> $BASH_ENV

  notify_deploy_finished:
    description: |
      A step to notify Rollbar that the deploy of a project has finished.
      Should be used in conjunction with notify_deploy_started.
    parameters:
      deploy_id:
        type: string
        description: The deploy_id of the deploy to update
      status:
        type: enum
        enum: ["succeeded","failed","timed_out"]
    steps:
        - run:
            name: Rollbar - Notify Deploy Finished
            command: |
              curl -X PATCH \
              https://api.rollbar.com/api/1/deploy/<< parameters.deploy_id>>?access_token=$ROLLBAR_ACCESS_TOKEN \
                --data '{"status":"<< parameters.status >>"}'

  notify_deploy:
    description: |
      A step to notify Rollbar that the project has been successfully deployed.
      A Rollbar access token is required to be set in the
      environment with the name `ROLLBAR_ACCESS_TOKEN`.
      Add this as the last step of your the job that you
      use to deploy.
    parameters:
      environment:
        type: string
        default: production
        description: The Rollbar environment. Defaults to production.
    steps:
      - run:
          name: Rollbar - Notify Deploy Succeeded
          command: |
            curl https://api.rollbar.com/api/1/deploy/ \
              --form access_token=$ROLLBAR_ACCESS_TOKEN \
              --form environment=<< parameters.environment >> \
              --form revision=$CIRCLE_SHA1 \
              --form local_username=$CIRCLE_USERNAME

  upload_sourcemap:
    description: A step to upload a sourcemap to Rollbar during a deploy.
    parameters:
      minified_url:
        type: string
        description:  The full URL of the minified file.
      source_map:
        type: string
        description: The path to the local copy of the source map
      js_files:
        type: string
        description: An array of local paths to unminified javascript files.
    steps:
      - run:
          name: Rollbar - Upload Sourcemap
          command: |
            for i in << parameters.js_files >>;
              do
                JS_FILES="$JS_FILES -F $i=@$i"
              done
            echo $JS_FILES
            curl https://api.rollbar.com/api/1/sourcemap \
              -F access_token=$ROLLBAR_ACCESS_TOKEN \
              -F version=$CIRCLE_SHA1\
              -F minified_url=<< parameters.minified_url >> \
              -F source_map=@<< parameters.source_map >> \
              $JS_FILES
